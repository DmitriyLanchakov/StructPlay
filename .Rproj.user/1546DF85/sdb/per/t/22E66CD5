{
    "contents" : "\n\n#load('chartdata.Rdata')\n\n#+------------------------------------+\n#  Structured product parameters\n#+------------------------------------+\n\nStructParams = function(marketrate, iv, def, period, trade){\n  \n  require(fOptions)\n\n  optprice = GBSOption(trade, 1, 1, period, 0, marketrate, iv)@price\n  ku = (marketrate*period + 1-def) / optprice \n  \n  return(list(Days=period*365, Partn=ku))\n}\n\n# StructParams(0.1, 0.2, 1, 1/4, 'c')\n\n\n\n#+------------------------------------+\n#  Structured product profile\n#+------------------------------------+\n\nStructProfile = function(S.vector, strike, trade='c', def=1, ku=1, period=1){\n  \n  if(trade=='c') trade=1 else trade=-1\n  \n  result = sapply(S.vector, function(x){\n    (def + max(0, (x/strike-1)*trade*ku)) - 1\n  })\n  \n  return(result)\n}\n\n# StructProfile(seq(from=0.8, to=1.2, by=0.01), def=0.9) %>% plot\n\n\n\n#+------------------------------------+\n#  Structured product profile\n#+------------------------------------+\n\nAssetChartData <- function(ticker, period, s1=1, target, projection=3, outputformat = 'dataframe') {\n  \n  require(quantmod)\n  require(dplyr)\n  require(tidyr)\n  require(googleVis)\n  \n  # temp vars\n  # ticker = 'RTS.RS'; period = 1/4; target = 1000; outputformat = c('dataframe', 'xts')\n  suppressWarnings({\n  tickerdata = getSymbols(ticker, auto.assign = F, warnings = F)[, paste0(ticker, '.Close')]\n  })\n  \n  today   = index(tickerdata) %>% max\n  expdate = today + period*365\n  frstday =  today - (expdate - today)*projection\n  tickerdata = tickerdata[paste0(frstday, '/', expdate),]\n  \n  curprice = as.numeric(tickerdata[today, 1, drop=T])\n  s1 = curprice * s1\n  \n  targetdata = data.frame(dates = seq(from=today, to=expdate, by=1), target=target)\n  targetdata = try.xts(x = targetdata[,2, drop=F], order.by = targetdata$dates)\n  \n  chartdata = cbind(tickerdata, targetdata) \n  \n  names(chartdata) = c(ticker, 'Target')\n  \n  if(outputformat=='dataframe'){\n    chartdata = as.data.frame(chartdata)\n    chartdata$Dates = row.names(chartdata)\n  }\n  \n  res = list(chartdata=chartdata,\n             today=today,\n             expdate=expdate,\n             curprice=curprice)\n  \n  #res = chartdata\n  return(res)\n}\n\n# assetdata = AssetChartData('RTS.RS', 1, target=1000, outputformat = 'dataframe')[2:4] %>% View\n\n\n\n#+------------------------------------+\n#  Base asset chart with target\n#+------------------------------------+\n\nDrawAssetChart = function(chartdata){\n  \n  yvars = colnames(chartdata) %>% .[.!='Dates']\n  \n  gchart = gvisComboChart(data = chartdata, \n                          xvar='Dates', \n                          yvar=yvars, \n                          options = list(\n                            chartArea = \"{left:50,top:10,right:0}\",\n                            series = \"[{color:'red', targetAxisIndex: 0, lineWidth: 2},\n  {color: 'grey',targetAxisIndex: 0, lineWidth: 1, lineDashStyle: [4, 2]}]\",\n                            height=300, \n                            width=600, \n                            seriesType='line', \n                            legend= \"{ position: 'bottom' }\",   \n                            hAxis = \"{baselineColor: 'white', gridlines: {color: 'white'}}\"\n                            \n                          ) )\n  gchart$html$footer = ''\n  gchart$html$caption = ''\n  \n  \n  return(gchart)\n}\n\n#   drawdata = assetdata[['chartdata']]\n# DrawAssetChart((drawdata)) %>% plot\n\n\n",
    "created" : 1446218792342.000,
    "dirty" : false,
    "encoding" : "CP1251",
    "folds" : "",
    "hash" : "128494570",
    "id" : "22E66CD5",
    "lastKnownWriteTime" : 1446650262,
    "path" : "~/MyR/StructPlay/structplay.R",
    "project_path" : "structplay.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : true,
    "type" : "r_source"
}