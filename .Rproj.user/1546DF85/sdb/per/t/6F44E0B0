{
    "contents" : "\n\nsource(file = 'structplay.R', echo=F)\n\nlibrary(shiny)\nlibrary(googleVis)\nlibrary(scales)\nlibrary(dplyr)\n\nshinyServer(function(input, output) {\n  \n  revals = reactiveValues()\n  \n  #\n  # Download base asset data\n  # \n  observe({\n    \n    input$refresh\n    \n    isolate({  baseasset = AssetChartData('RTS.RS', input$investperiod/12, s1=1, target=input$targetInput) })\n    \n    revals$baseasset = baseasset\n  })\n  \n  \n  #\n  # Render base asset chart\n  #\n  output$baseassetChart = renderGvis({\n    \n    DrawAssetChart(revals$baseasset[['chartdata']])\n    \n  })\n  \n  \n  #\n  # Structured params calculation - reactive list\n  #  \n  \n  observe({\n    \n    input$refresh\n    \n    isolate({\n      revals$params = NULL\n      params = StructParams(input$marketrate/100, \n                   input$iv/100,\n                   input$defInput/100,\n                   input$investperiod/12, \n                   input$longshort )\n      \n    })\n    \n    revals$params = params\n    \n  })\n  \n  \n  #\n  # Render params table\n  #\n  output$paramsTable = renderGvis({\n    \n    revals$params\n    \n    isolate({\n      result = c(revals$params, revals$baseasset[2:4])\n      result$roe = StructProfile(input$targetInput, result$curprice, input$longshort, input$defInput/100, result$Partn, input$investperiod/12)\n      result$roeann = result$roe / (input$investperiod/12)\n      result[c('roe', 'roeann', 'Partn')] = lapply(result[c('roe', 'roeann', 'Partn')], percent)\n      result$target = input$targetInput\n      result = result[c('today', 'expdate', 'curprice', 'target', 'Partn', 'roe', 'roeann')]\n      result = result %>% data.frame %>% t %>% data.frame\n      names(result) = 'Value'\n      result$Params = c('Start date', 'End date', \"Start price\", \"Target price\", \"Participation\", \"ROE, %\", \"ROE, annual %\")\n      \n      \n      \n    })\n\n    gvisTable(result[, c('Params', 'Value')], options=list(width=600, sort='disable'))\n  })\n  \n  \n\n  \n  #\n  # Render structured product profile chart\n  #\n  output$profileChart = renderGvis({\n    \n    \n    revals$params\n    \n    isolate({\n      \n      def = input$defInput/100\n      ku = revals$params$Partn\n      X1 = revals$baseasset$curprice\n      target = input$targetInput\n      \n      xEnd = X1 + abs(target - X1) * 1.1\n      xStart = X1 * (1- abs(xEnd/X1-1))\n      xPoints = seq(from = xStart, to = xEnd, length.out = 100)\n      \n      \n      prfl = StructProfile(xPoints, X1,  input$longshort, def, ku, input$investperiod/12)\n      \n      chart.data = data.frame(AssetPrice = round(xPoints, 2), Profit=round(prfl*100, 2), Breakeven=0)\n      \n      gchart = gvisComboChart(data = chart.data, \n                              xvar=c('AssetPrice'), \n                              yvar=c('Profit', 'Breakeven'), \n                              options = list(\n                                chartArea = \"{left:50,top:10,right:0,bottom:50}\",\n                                series = \"[{color:'red', targetAxisIndex: 0, lineWidth: 2}, \n                                {color: 'grey',targetAxisIndex: 0, lineWidth: 1, lineDashStyle: [4, 2]}]\",\n                                height=350, \n                                width=600, \n                                seriesType='line', \n                                legend= \"{ position: 'in' }\",   \n                                hAxis = \"{baselineColor: 'white', gridlines: {color: 'white'}, title: 'Base asset price'}\",\n                                vAxis=\"{title:'Profit, %'}\"\n                                \n                                \n                              ) )\n      gchart$html$footer = ''\n      gchart$html$caption = ''\n      \n      gchart\n      \n    })\n    \n  })\n  \n  \n })\n\n",
    "created" : 1438148801860.000,
    "dirty" : false,
    "encoding" : "CP1251",
    "folds" : "",
    "hash" : "1184724979",
    "id" : "6F44E0B0",
    "lastKnownWriteTime" : 1446655549,
    "path" : "~/MyR/StructPlay/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}